{"name":"Ngjstree","tagline":"Angular Directive for the famous JS Tree ","body":"[![Bower version](https://badge.fury.io/bo/ng-js-tree.svg)](http://badge.fury.io/bo/ng-js-tree)\r\n[![Build Status](https://travis-ci.org/ezraroi/ngJsTree.svg?branch=master)](https://travis-ci.org/ezraroi/ngJsTree)\r\n[![Dependency Status](https://gemnasium.com/ezraroi/ngJsTree.svg)](https://gemnasium.com/ezraroi/ngJsTree)\r\n[![Coverage Status](https://img.shields.io/coveralls/ezraroi/ngJsTree.svg)](https://coveralls.io/r/ezraroi/ngJsTree?branch=master)\r\n[![Code Climate](https://codeclimate.com/github/ezraroi/ngJsTree/badges/gpa.svg)](https://codeclimate.com/github/ezraroi/ngJsTree)\r\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\r\n[![NPM](https://nodei.co/npm/ng-js-tree.png?mini=true)](https://npmjs.org/package/ng-js-tree)\r\n\r\nEnhancement into ngJsTree\r\n=========================\r\n\r\nAngular Directive for the famous [JS Tree] library.\r\n\r\n\r\n##Dependencies\r\n\r\n\r\nThe ngJsTree depends on the following libraries:\r\n* Angular\r\n* JsTree\r\n\r\n\r\n##Install\r\n\r\n\r\nYou can install the ngJsTree with bower:\r\n\r\n```bat\r\nbower install ng-js-tree --save\r\n```\r\n\r\nor with npm:\r\n```bat\r\nnpm install ng-js-tree --save\r\n```\r\n\r\n\r\nor you can add the ngJsTree.min.js file to your HTML page:\r\n```html\r\n<script src=\"jquery.js\"/>\r\n<script src=\"angular.js\"/>\r\n<script src=\"jstree.min.js\"/>\r\n<script src=\"ngJsTree.min.js\"/>\r\n```\r\n\r\nAdd the `ngJsTree` to your module dependencies\r\n\r\n\r\n#Documentation\r\n\r\n\r\nYou can find the JSTree documentation at [this link]\r\n\r\n## Usage\r\n\r\n```html\r\n<div js-tree=\"treeConfig\" ng-model=\"treeData\" should-apply=\"ignoreModelChanges()\" tree=\"treeInstance\" tree-events=\"ready:readyCB;create_node:createNodeCB\"></div>\r\n```\r\n\r\n* `treeConfig` - This is the configuration object of the JsTree, if you will not supply one, an empty one will be created (not mandatory).\r\n* `treeData` - The array with the elements of the tree, will be used for data binding (adding / removing / updating this data will be reflected in the tree).\r\n* `ignoreModelChanges()` - A method that returns true or false. when returning false, model changes will not be reflected in the tree (not mandatory).\r\n* `treeInstance` - The Js Tree instance will be assigned to this variable in your controller scope (not mandatory).\r\n* `ready:readyCB;create_node:createNodeCB` - List of Js Tree events and callbacks in your controller scope that will be called for each event (not mandatory.\r\n\r\n##ngJSTree as DropDown\r\n\r\n```html\r\n <div class=\"input-group\" data-toggle=\"dropdown\">\r\n                            <input type=\"text\"\r\n                                   ng-readonly=\"true\"\r\n                                   class=\"form-control\"\r\n                                   ng-model=\"vm.selectedDisplayText\">\r\n\r\n                            <div class=\"input-group-btn hierarchydropdown-select\">\r\n                                <button type=\"button\"\r\n                                        style=\"height:33px;\"\r\n                                        class=\"btn btn-default dropdown-toggle\"\r\n                                        data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\"\r\n                                        aria-expanded=\"false\">\r\n\r\n                                    <span class=\"caret\"></span>\r\n\r\n                                </button>\r\n\r\n                                <ul class=\"dropdown-menu scrollable-dropdown-menu\" cg-busy=\"promise\">\r\n                                    <!--stopPropagation to stop toggle event of dropdown option-->\r\n                                    <li ng-click=\"$event.stopPropagation()\">\r\n                                        <div js-tree=\"vm.treeConfig\"\r\n                                             should-apply=\"vm.applyModelChanges()\"\r\n                                             ng-model=\"vm.treeData\"\r\n                                             selected-node=\"vm.selectedNode\"\r\n                                             selected-display-text=\"vm.selectedDisplayText\"\r\n                                             tree=\"vm.treeInstance\"\r\n                                             tree-events=\"ready:vm.readyCB;create_node:vm.createCB\"></div>\r\n                                    </li>\r\n                                </ul>\r\n                            </div><!-- /btn-group -->\r\n\r\n                        </div>\r\n```\r\n* `selectedNode` - This will contains selected node ID\r\n* `selectedDisplayText` - This will store the selected node text.\r\n\r\n\r\n### Registering for events\r\nYou can register a callback for any Js Tree event in the following way:\r\n* add the  `tree-events` attribute and specify the name of the events to register for and a callback for each event.\r\n\r\nExample:\r\n```html\r\n<div ng-controller='myCtrl'>\r\n    <div js-tree=\"treeConfig\" ng-model=\"treeData\" should-apply=\"ignoreModelChanges()\" tree=\"treeInstance\" tree-events=\"ready:readyCB;create_node:createNodeCB\"></div>\r\n</div>\r\n```\r\n\r\n```javascript\r\nangular.module('myApp').controller('myCtrl', function($scope,$log) {\r\n    $scope.readyCB = function() {\r\n        $log.info('ready called');\r\n    };\r\n    \r\n    $scope.createNodeCB = function(e,item) {\r\n        $log.info('create_node called');\r\n    };\r\n);\r\n```\r\n\r\n### Using the Js Tree API from your controller\r\nAdd the tree attribute to the jstree directive and assign it with a name of a variable in your controller that will hold the jstree instance.\r\n```html\r\n<div ng-controller='myCtrl'>\r\n    <div js-tree=\"treeConfig\" ng-model=\"treeData\" tree=\"treeInstance\"></div>\r\n</div>\r\n```\r\n\r\n```javascript\r\nfunction yourCtrl($scope)  {\r\n    var selected_nodes = $scope.treeInstance.jstree(true).get_selected();\r\n}\r\n```\r\n\r\n### Recreating the Tree\r\nIf from some reason you would like to recreate the tree, the right way to do it is update the tree configuration object. Once the directive will detect a change to the tree configuration it will destory the tree and recreate it. \r\n```javascript\r\nthis.treeConfig = {\r\n    core : {\r\n        multiple : false,\r\n        animation: true,\r\n        error : function(error) {\r\n            $log.error('treeCtrl: error from js tree - ' + angular.toJson(error));\r\n        },\r\n        check_callback : true,\r\n        worker : true\r\n    },\r\n    version : 1\r\n};\r\nthis.reCreateTree = function() {\r\n    this.treeConfig.version++;\r\n}\r\n```\r\n* The reason i am using the version property is because it is not a JsTree config property, so it will not effect the tree.\r\n\r\n## Development\r\n#### Prepare your environment\r\n\r\n* Install [Node.js](http://nodejs.org/) and NPM (should come with)\r\n* Install global dev dependencies: `npm install -g grunt-cli karma`\r\n* Install local dev dependencies: `npm install` while current directory is ngJsTree\r\n* Install javascript dependencies: `bower install` while current directory is ngJsTree\r\n\r\n#### Build\r\n* Build the whole project: `grunt` - this will run `jshint` and `test` and will build the project\r\n\r\n\r\n#### TDD\r\n* Run test: `grunt watch`\r\n\r\nLicense\r\n----\r\n\r\nMIT\r\n\r\n[JS Tree]:http://www.jstree.com/\r\n[this link]:http://www.jstree.com/api/\r\n","google":"UA-71947543-2","note":"Don't delete this file! It's used internally to help with page regeneration."}